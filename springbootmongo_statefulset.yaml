apiVersion: apps/v1
kind: Deployment
metadata:
  name: springmongodeployment
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: springmongoapp
  replicas: 1
  template:
    metadata:
      name: springmongopod
      labels:
        app: springmongoapp
    spec:
      containers:
      - name: springmongocontainer
        image: samuelpolagani98/sprintbootmongo:1
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 500m
            memory: 500Mi
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
        env:
          - name: MONGO_DB_USERNAME
            value: devdb
          - name: MONGO_DB_PASSWORD
            value: devdb123
          - name: MONGO_DB_HOSTNAME
            value: mongodb-service
---
#Service for springboot application
apiVersion: v1
kind: Service
metadata:
  name: springappmongoservice
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springmongoapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongod
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongodb-service
  replicas: 3
  template:
    metadata:
      labels:
        app: mongo
    spec:
      terminationGracePeriodSeconds: 10 #as this is a statefull applicaiton, need to be stopped gracefully
      containers:
        - name: mongod-container
          image: mongo
          command:
            - "mongod"
            - "--bind_ip"
            - "0.0.0.0"
            - "--replSet"
            - "MainRepSet"
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
            limits:
              cpu: 500m
              memory: 1Gi
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-persistent-storage-claim
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongodb-persistent-storage-claim
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: test-ns
spec:
  clusterIP: None #it is of type Headless Service
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
